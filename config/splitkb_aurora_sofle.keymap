/*
 * Copyright (c) 2023 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/rgb.h>

// Uncomment this block if using RGB

&led_strip {
    chain-length = <35>; // per-key + underglow LEDs
};

// Enable nice!view

&nice_view_spi {
    cs-gpios = <&gpio1 1 GPIO_ACTIVE_HIGH>; // account for using botched wire from P1.01 for CS on nice!view
};

/ {
    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // ------------------------------------------------------------------------------------------------------------
            // |  ESC  |  1  |  2  |  3   |  4   |  5   |                   |  6   |  7    |  8    |  9   |   0   |   `   |
            // |  TAB  |  Q  |  W  |  E   |  R   |  T   |                   |  Y   |  U    |  I    |  O   |   P   |   -   |
            // |  CTRL |  A  |  S  |  D   |  F   |  G   |                   |  H   |  J    |  K    |  L   |   ;   |   '   |
            // | SHIFT |  Z  |  X  |  C   |  V   |  B   |  MUTE  |  | PSCRN |  N   |  M    |  ,    |  .   |   /   | SHIFT |
            //               |CTRL | ALT  | GUI  | LOWER|  SPACE |  | ENTER | RAISE| BSPC  | GUI   | RALT |
            //
            // Encoder Left:    VOL DOWN <-> VOL UP
            // Encoder Right: SROLL DOWN <-> SROLL UP

            bindings = <
&kp ESC    &kp N1  &kp N2     &kp N3    &kp N4    &kp N5                           &kp N6  &kp N7    &kp N8     &kp N9    &kp N0    &kp GRAVE
&kp TAB    &kp Q   &kp W      &kp E     &kp R     &kp T                            &kp Y   &kp U     &kp I      &kp O     &kp P     &kp MINUS
&kp LCTRL  &kp A   &kp S      &kp D     &kp F     &kp G                            &kp H   &kp J     &kp K      &kp L     &kp SEMI  &kp SQT
&kp LSHFT  &kp Z   &kp X      &kp C     &kp V     &kp B   &kp C_MUTE    &kp PSCRN  &kp N   &kp M     &kp COMMA  &kp DOT   &kp FSLH  &kp RSHFT
                   &kp LCTRL  &kp LALT  &kp LGUI  &mo 1   &kp SPACE     &kp RET    &mo 2   &kp BSPC  &kp RGUI   &kp RALT
            >;

            sensor-bindings =
                <&inc_dec_kp C_VOL_UP C_VOL_DN>,
                <&inc_dec_kp PAGE_UP PAGE_DOWN>;
        };

        lower_layer_new {
            bindings = <
&kp ESC    &kp F1   &kp F2     &kp F3    &kp F4    &kp F5                           &kp F6           &kp F7          &kp F8          &kp F9           &kp F10  &kp BSPC
&kp CAPS   &kp F11  &kp F12    &trans    &trans    &trans                           &trans           &kp BACKSPACE   &kp UP_ARROW    &kp DEL          &trans   &trans
&kp LSHFT  &trans   &trans     &trans    &trans    &trans                           &kp PRINTSCREEN  &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT_ARROW  &trans   &trans
&kp LCTRL  &trans   &trans     &trans    &trans    &trans  &kp C_MUTE    &trans     &trans           &trans          &trans          &trans           &trans   &kp RCTRL
                    &kp LCTRL  &kp LALT  &kp LGUI  &trans  &kp SPACE     &kp ENTER  &trans           &kp BSPC        &kp RGUI        &kp RALT
            >;

            sensor-bindings =
                <&inc_dec_kp C_VOLUME_UP C_VOLUME_DOWN>,
                <&inc_dec_kp PAGE_UP PAGE_DOWN>;
        };

        raise_layer_new {
            bindings = <
&trans  &trans  &trans    &trans         &trans   &trans                        &trans     &trans    &trans                &trans                 &trans    &trans
&trans  &trans  &trans    &kp PAGE_UP    &trans   &trans                        &kp STAR   &kp PIPE  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp EXCL  &kp UNDER
&trans  &trans  &kp HOME  &kp PAGE_DOWN  &kp END  &trans                        &kp EQUAL  &kp LT    &kp LEFT_BRACKET      &kp RIGHT_BRACKET      &kp GT    &kp TILDE
&trans  &trans  &trans    &trans         &trans   &trans  &kp C_MUTE    &trans  &kp PRCNT  &kp AMPS  &kp LEFT_BRACE        &kp RIGHT_BRACE        &kp PLUS  &kp MINUS
                &trans    &trans         &trans   &trans  &kp SPACE     &trans  &trans     &trans    &trans                &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOLUME_DOWN>;
        };

        lower_layer_old {
            // ------------------------------------------------------------------------------------------------------------
            // | BTCLR | BT1 | BT2 |  BT3 |  BT4 |  BT5 |                   |      |       |       |      |       |       |
            // |  F1   |  F2 |  F3 |  F4  |  F5  |  F6  |                   |  F7  |  F8   |  F9   |  F10 |  F11  |  F12  |
            // |   `   |  !  |  @  |  #   |  $   |  %   |                   |  ^   |  &    |  *    |  (   |   )   |   ~   |
            // |       |     |     |      |      |      |        |  |       |      |  _    |  +    |  {   |   }   |  "|"  |
            //               |     |      |      |      |        |  |       |      |       |       |      |
            //
            // Encoder Left:    VOL DOWN <-> VOL UP
            // Encoder Right: SROLL DOWN <-> SROLL UP

            bindings = <
&bt BT_CLR  &bt BT_SEL 0      &bt BT_SEL 1       &bt BT_SEL 2       &bt BT_SEL 3  &bt BT_SEL 4                    &trans     &trans     &trans    &trans    &trans    &trans
&kp F1      &kp F2            &kp F3             &kp F4             &kp F5        &kp F6                          &kp F7     &kp F8     &kp F9    &kp F10   &kp F11   &kp F12
&kp GRAVE   &kp EXCL          &kp AT             &kp HASH           &kp DOLLAR    &kp PRCNT                       &kp CARET  &kp AMPS   &kp STAR  &kp LPAR  &kp RPAR  &kp TILDE
&trans      &ext_power EP_ON  &ext_power EP_OFF  &ext_power EP_TOG  &trans        &trans        &trans    &trans  &trans     &kp MINUS  &kp PLUS  &kp LBRC  &kp RBRC  &kp PIPE
                              &rgb_ug RGB_TOG    &trans             &trans        &trans        &trans    &trans  &trans     &trans     &trans    &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };

        raise_layer_old {
            // ------------------------------------------------------------------------------------------------------------
            // |       |     |     |      |      |      |                   |      |       |       |      |       |       |
            // |   `   |  1  |  2  |  3   |  4   |  5   |                   |  6   |   7   |   8   |  9   |   0   |       |
            // |   F1  |  F2 |  F3 |  F4  |  F5  |  F6  |                   |      |   <-  |   v   |  ^   |  ->   |       |
            // |   F7  |  F8 |  F9 |  F10 |  F11 |  F12 |        |  |       |  +   |   -   |   =   |  [   |   ]   |   \   |
            //               |     |      |      |      |        |  |       |      |       |       |      |
            //
            // Encoder Left:    VOL DOWN <-> VOL UP
            // Encoder Right: SROLL DOWN <-> SROLL UP

            bindings = <
&trans     &trans  &trans  &trans   &trans   &trans                     &trans       &trans     &trans     &trans    &trans     &trans
&kp GRAVE  &kp N1  &kp N2  &kp N3   &kp N4   &kp N5                     &kp N6       &kp N7     &kp N8     &kp N9    &kp N0     &trans
&kp F1     &kp F2  &kp F3  &kp F4   &kp F5   &kp F6                     &trans       &kp LEFT   &kp DOWN   &kp UP    &kp RIGHT  &trans
&kp F7     &kp F8  &kp F9  &kp F10  &kp F11  &kp F12  &trans    &trans  &kp KP_PLUS  &kp MINUS  &kp EQUAL  &kp LBKT  &kp RBKT   &kp BSLH
                   &trans  &trans   &trans   &trans   &trans    &trans  &trans       &trans     &trans     &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };
    };
};
