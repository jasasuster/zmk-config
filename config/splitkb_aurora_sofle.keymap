/*
 * Copyright (c) 2023 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/rgb.h>
#include "keys_si.h"

// Uncomment this block if using RGB

&led_strip {
    chain-length = <35>; // per-key + underglow LEDs
};

// Enable nice!view

&nice_view_spi {
    cs-gpios = <&gpio1 1 GPIO_ACTIVE_HIGH>; // account for using a botched wire from P1.01 for CS on nice!view
};

/ {
    combos {
        compatible = "zmk,combos";

        adjust_layer {
            bindings = <&mo 3>;
            key-positions = <53 56>;
            layers = <0>;
        };

        macro_params_use {
            bindings = <&macro_parens>;
            key-positions = <20 21>;
            layers = <2>;
        };

        macro_brackets_use {
            bindings = <&macro_bracket>;
            key-positions = <32 33>;
            layers = <2>;
        };

        macro_brace_use {
            bindings = <&macro_brace>;
            key-positions = <46 47>;
            layers = <2>;
        };
    };

    macros {
        macro_parens: parens {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_tap>, <&kt SI_LPAR &kp SI_RPAR &kp LEFT>;

            label = "MACRO_PARENS";
            wait-ms = <10>;
            tap-ms = <30>;
        };

        macro_quotes: quotes {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_tap>,
                <&kp SI_DQT &kp SI_DQT &kp LEFT>;

            label = "MACRO_QUOTES";
            wait-ms = <10>;
            tap-ms = <30>;
        };

        macro_bracket: macro_bracket {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_tap>,
                <&kp SI_LBKT &kp SI_RBKT &kp LEFT>;

            label = "MACRO_BRACKET";
            wait-ms = <10>;
            tap-ms = <30>;
        };

        macro_brace: macro_brace {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_tap>, <&kp SI_LBRC &kp SI_RBRC &kp LEFT>;

            label = "MACRO_BRACE";
            wait-ms = <10>;
            tap-ms = <30>;
        };
    };

    behaviors {
        #include "behaviors_mod_morph.dtsi"
        
        shft_caps: tap_dance_shift_caps_lock_toggle {
            compatible: "zmk,behavior-tap-dance";
            label = "TAP_DANCE_SHIFT_CAPS_LOCK_TOGGLE";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp LSHFT>, <&kp CAPS>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            /*
            *   ,-----------------------------------------.                 ,-----------------------------------------.
            *   | ESC  |   1  |   2  |   3  |   4  |   5  |                 |  6   |  7   |  8   |  9   |  0   |  ` ~ |
            *   +------+------+------+------+------|------.                 .------+------+------+------+------+------.
            *   | TAB  |   Q  |   W  |   E  |   R  |   T  |                 |  Z   |  U   |  I   |  O   |  P   |  - _ |
            *   +------+------+------+------+------|------+                 .------+------+------+------+------+------.
            *   | SHIFT|   A  |   S  |   D  |   F  |   G  |                 |  H   |  J   |  K   |  L   |  ; : |  ' " |
            *   +------+------+------+------+------+------+------.   .------+------+------+------+------+------+------.
            *   | CTRL |   Y  |   X  |   C  |   V  |   B  | MUTE |   | PSCRN|  N   |  M   |  , < |  . > |  / ? | SHIFT|
            *   `------+------+------+------+------+------+------+   +------+------+------+------+------+------+------'
            *                 | CTRL | ALT  | GUI  | LOWER| SPACE|   | ENTER| RAISE| BSPC | GUI  | RALT |
            *                 `------+------+------+------+------'   '------+------+------+------+------'
            *
            *   Encoder Left:    VOL DOWN <-> VOL UP
            *   Encoder Right:   PAGE UP  <-> PAGE DOWN
            */

            bindings = <
&kp ESC        &kp SI_N1  &kp SI_N2  &kp SI_N3    &kp SI_N4    &kp SI_N5                           &kp SI_N6  &kp SI_N7    &kp SI_N8     &kp SI_N9    &kp SI_N0    &kp si_grave_lin
&kp TAB        &kp SI_Q   &kp SI_W   &kp SI_E     &kp SI_R     &kp SI_T                            &kp SI_Z   &kp SI_U     &kp SI_I      &kp SI_O     &kp SI_P     &kp si_minus
&kp shft_caps  &kp SI_A   &kp SI_S   &kp SI_D     &kp SI_F     &kp SI_G                            &kp SI_H   &kp SI_J     &kp SI_K      &kp SI_L     &kp si_semi  &kp si_sqt
&kp LCTRL      &kp SI_Y   &kp SI_X   &kp SI_C     &kp SI_V     &kp SI_B   &kp C_MUTE    &kp PSCRN  &kp SI_N   &kp SI_M     &kp si_comma  &kp si_dot   &kp si_fslh  &kp shft_caps
                          &kp LCTRL  &kp LALT     &kp LGUI     &mo 1      &kp SPACE     &kp RET    &mo 2      &kp BSPC     &kp RGUI      &kp RALT
            >;

            sensor-bindings = 
                <&inc_dec_kp C_VOL_UP C_VOL_DN>,
                <&inc_dec_kp PAGE_DOWN PAGE_UP>;
        };

        lower_layer {
            /*
            *   ,-----------------------------------------.                 ,-----------------------------------------.
            *   |  F1  |  F2  |  F3  |  F4  |  F5  |  F6  |                 |  F7  |  F8  |  F9  | F10  | F11  | F12  |
            *   +------+------+------+------+------|------.                 .------+------+------+------+------+------.
            *   | CAPS |      |   7  |   8  |   9  |      |                 |      | BSPC |  UP  | DEL  |      |      |
            *   +------+------+------+------+------|------+                 .------+------+------+------+------+------.
            *   | SHIFT|      |   4  |   5  |   6  |      |                 | PSCRN| LEFT | DOWN |RIGHT |      |      |
            *   +------+------+------+------+------+------+------.   .------+------+------+------+------+------+------.
            *   | CTRL |   0  |   1  |   2  |   3  |      | MUTE |   |      |      |      |      |      |      |      |
            *   `------+------+------+------+------+------+------+   +------+------+------+------+------+------+------'
            *                 | CTRL | ALT  | GUI  |      | SPACE|   | ENTER|      | BSPC  | GUI | RALT |
            *                 `------+------+------+------+------'   '------+------+------+------+------'
            *
            *   Encoder Left:    VOL DOWN <-> VOL UP
            *   Encoder Right:   PAGE UP  <-> PAGE DOWN
            */

            bindings = <
&kp F1     &kp F2  &kp F3     &kp F4    &kp F5    &kp F6                    &kp F7     &kp F8          &kp F9          &kp F10          &kp F11  &kp F12
&kp CAPS   &none   &kp N7     &kp N8    &kp N9    &none                     &none      &kp BSPC        &kp UP_ARROW    &kp DEL          &none   &none
&kp LSHFT  &none   &kp N4     &kp N5    &kp N6    &none                     &kp PSCRN  &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT_ARROW  &none   &none
&kp LCTRL  &kp N0  &kp N1     &kp N2    &kp N3    &none  &trans     &none   &none      &none           &none           &trans           &none   &none
                   &trans     &trans    &trans    &none  &trans     &trans  &none      &trans          &trans          &trans
            >;

            sensor-bindings =
                <&inc_dec_kp C_VOLUME_UP C_VOLUME_DOWN>,
                <&inc_dec_kp PAGE_DOWN PAGE_UP>;
        };

        raise_layer {
            /*
            *   ,-----------------------------------------.                 ,-----------------------------------------.
            *   | ESC  |   1  |   2  |   3  |   4  |   5  |                 |  6   |  7   |  8   |  9   |  0   |  ` ~ |
            *   +------+------+------+------+------|------.                 .------+------+------+------+------+------.
            *   |      |   Š  |   @  | PGUP |      |      |                 |  *   |  |   |  (   |  )   |  !   |  _   |
            *   +------+------+------+------+------|------+                 .------+------+------+------+------+------.
            *   | SHIFT|   Č  | HOME | PGDN | END  |      |                 |  =   |  <   |  [   |  ]   |  >   |  ~   |
            *   +------+------+------+------+------+------+------.   .------+------+------+------+------+------+------.
            *   |      |   Ž  |      |      |      |      |      |   |      |  %   |  &   |  {   |  }   |  +   |  -   |
            *   `------+------+------+------+------+------+------+   +------+------+------+------+------+------+------'
            *                 | CTRL | ALT  | GUI  |      | SPACE|   | ENTER|      | BSPC | GUI  | RALT |
            *                 `------+------+------+------+------'   '------+------+------+------+------'
            */

            bindings = <
&trans &trans       &trans      &trans         &trans   &trans                        &trans        &trans       &trans       &trans       &trans       &trans
&none  &kp SI_SCAR  &kp SI_AT   &kp PAGE_UP    &none    &none                         &kp SI_ASTRK  &kp SI_PIPE  &kp SI_LPAR  &kp SI_RPAR  &kp SI_EXCL  &kp SI_UNDER
&trans &kp SI_CCAR  &kp HOME    &kp PAGE_DOWN  &kp END  &none                         &kp SI_EQUAL  &kp SI_LT    &kp SI_LBKT  &kp SI_RBKT  &kp SI_GT    &kp SI_TILDE
&none  &kp SI_ZCAR  &none       &none          &none    &none   &kp C_MUTE    &none   &kp SI_PRCNT  &kp SI_AMPS  &kp SI_LBRC  &kp SI_RBRC  &kp SI_PLUS  &kp SI_MINUS
                    &trans      &trans         &trans   &none   &trans        &trans  &none         &trans       &trans       &trans
            >;
        };

        adjust {
            /*
            *   ,-----------------------------------------.                 ,-----------------------------------------.
            *   |      |      |      |      |      |      |                 |      |      |      |      |      |      |
            *   +------+------+------+------+------|------.                 .------+------+------+------+------+------.
            *   |      | BT0  | BT1  | BT2  | BT3  | BT4  |                 |      | OFF  | ON   | TOG  |      |      |
            *   +------+------+------+------+------|------+                 .------+------+------+------+------+------.
            *   |      |      | EXT1 | EXT2 | EXT3 |      |                 |      | BRI+ | BRI- | EFF+ | EFF- |      |
            *   +------+------+------+------+------+------+------.   .------+------+------+------+------+------+------.
            *   |      |      |      |      |      |      |      |   |      |      |      |      |      |      |      |
            *   `------+------+------+------+------+------+------+   +------+------+------+------+------+------+------'
            *                 |      |      |      |      |      |   |      |      |      |      |      |
            *                 `------+------+------+------+------'   '------+------+------+------+------'
            */

            bindings = <
&none  &none         &none              &none             &none              &none                         &none  &none           &none           &none           &none           &none
&none  &bt BT_SEL 0  &bt BT_SEL 1       &bt BT_SEL 2      &bt BT_SEL 3       &bt BT_SEL 4                  &none  &rgb_ug RGB_OFF &rgb_ug RGB_ON  &rgb_ug RGB_TOG &none           &none
&none  &none         &ext_power EP_TOG  &ext_power EP_ON  &ext_power EP_OFF  &none                         &none  &rgb_ug RGB_BRI &rgb_ug RGB_BRD &rgb_ug RGB_EFF &rgb_ug RGB_EFR &none
&none  &none         &none              &none             &none              &none        &none    &none   &none  &none           &none           &none           &none           &none
                     &none              &none             &none              &none        &none    &none   &none  &none           &none           &none
            >;
        };
    };
};
